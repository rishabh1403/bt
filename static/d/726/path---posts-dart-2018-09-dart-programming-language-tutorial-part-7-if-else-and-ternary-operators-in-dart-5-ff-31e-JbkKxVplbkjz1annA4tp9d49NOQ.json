{"data":{"markdownRemark":{"frontmatter":{"title":"Dart Programming Language Tutorial Part 7 | If Else and Ternary Operators in Dart"},"html":"<p>In this post we will cover the if-else statement in Dart. If-else block is one of the basic building blocks of many programming languages, let's look into it right away.</p>\n<!--more-->\n<h1>Conditions in a Program</h1>\n<p>Many a times in a program we are required to check for a particular condition. Based on the truth of condition i.e. if the condition is either is true or false we execute a set of instructions. In Dart <code class=\"language-text\">If-Else</code> is one of the few ways to check for conditions in our program. On it's own, <strong><em>if-else</em></strong> is pretty simple to write and understand, it really shines when it is combined with other powerful concepts of the language and can be used to write some pretty complex logic. Let's look into <strong><em>if-else</em></strong> syntax and some examples.</p>\n<h1>If-Else in Dart</h1>\n<p>The syntax of an <strong><em>if-else</em></strong> statement is very simple. Let's first start with only an <strong><em>if</em></strong> statement.</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-dart line-numbers\"><code class=\"language-dart\">    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n     <span class=\"token comment\">// code to execute when condition is true</span>\n    <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>So above is a syntax of a simple if block. We write the condition in the paranthesis and if the condition evaluates to <code class=\"language-text\">true</code> the code inside the <code class=\"language-text\">{}</code> will be run. Pretty simple ha..!!!. Now Let's look at the syntax of an if-else block.</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-dart line-numbers\"><code class=\"language-dart\">    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// run when condition is true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// run when condition is false    </span>\n    <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Now we have a <code class=\"language-text\">if-else</code> syntax here. We condition in the paranthesis as before and if the condition evaluates to <code class=\"language-text\">true</code> the code inside the <strong><em>if</em></strong> block runs however if some unfortunate reason the condition evaluates to false, the code inside <code class=\"language-text\">else</code> block runs. We can also combine multiple if-else blocks to create a chain of <code class=\"language-text\">if-elseif-else</code> block. Let's look at some examples.</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-dart line-numbers\"><code class=\"language-dart\">    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"condition is true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// prints this line   </span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"condition is false\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// skips this line</span>\n    <span class=\"token punctuation\">}</span>\n\n\n    <span class=\"token keyword\">var</span> b <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>b<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"condition is true\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// skips this line   </span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"condition is false\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>    <span class=\"token comment\">// prints this line</span>\n    <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Here we have two examples, in one of them the condition is true, while the condition evaluates to false in the other one. In the case where condition evaluates to true, print in the if block is run, while in case where condition evaluates to false, print in the else block is run. Let's look at another example where we can chain multiple if-else. </p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-dart line-numbers\"><code class=\"language-dart\">    <span class=\"token comment\">// marks 80-100 A+</span>\n    <span class=\"token comment\">// marks 60-80 A</span>\n    <span class=\"token comment\">// marks 40-60 B</span>\n    <span class=\"token comment\">// marks &lt; 40 C</span>\n\n    <span class=\"token keyword\">var</span> marks <span class=\"token operator\">=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> marks <span class=\"token operator\">></span> <span class=\"token number\">80</span> <span class=\"token operator\">&amp;&amp;</span> marks <span class=\"token operator\">&lt;=</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A+\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// Prints A+    </span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> marks <span class=\"token operator\">></span><span class=\"token number\">60</span> <span class=\"token operator\">&amp;&amp;</span> marks <span class=\"token operator\">&lt;=</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>marks <span class=\"token operator\">></span> <span class=\"token number\">40</span> <span class=\"token operator\">&amp;&amp;</span> marks <span class=\"token operator\">&lt;=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"B\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"C\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Another example where we demonstrate chaining of <code class=\"language-text\">if-else</code> . Here the first if block's condition evaluates to true so the print is run and rest of code is skipped. Now let's move on to ternary operators.</p>\n<h1>Ternary Operators in Dart</h1>\n<p>Ternary operators are nothing but another way to write an if-else block in a single line. It is well-and-good if you want to write quick and small conditions but we shouldn't use this for complex logical checks as this might get messy. Let's look into the syntax.</p>\n<div class=\"gatsby-highlight\" data-language=\"dart\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-dart line-numbers\"><code class=\"language-dart\">    <span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"condition is true\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"condition is false\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>Okay so everything we have inside the print is part of our ternary operator. Ternary operators start with a condition, usually it's good to wrap ur condition in a paranthesis , but it is not required. Next we have a <code class=\"language-text\">?</code>. Anything we write between <code class=\"language-text\">?</code> and <code class=\"language-text\">:</code> is run if the condition is true, and anything we write after the <code class=\"language-text\">:</code> is run id the condition was false. In our case since the condition was true, it will return <code class=\"language-text\">&quot;condtion is true&quot;</code> and that would be printed. This is it for this one. Will see you in the next one.</p>\n<p>There you go guys, you made it to end of the post. Please check out the video below if you still have any doubts. Subscribe to my <a href=\"https://www.youtube.com/channel/UC4syrEYE9_fzeVBajZIyHlA\">youtube channel</a> and my mailing list below for regular updates. Follow me on <a href=\"https://www.twitter.com/rishabhjain1403\">twitter</a> , drop me a mail or leave a comment here if you still have any doubts and I will try my best to help you out. Thanks</p>\n<p>Stay tuned and see you around :)\n{{&#x3C; youtube zOyVj81gYnw >}}  </p>"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"posts/dart/2018/09/dart-programming-language-tutorial-part-7-if-else-and-ternary-operators-in-dart/","prev":{"frontmatter":{"title":"Dart Programming Language Tutorial Part 6 | Built-In Types Part 2","description":"In the last post we discussed numbers, strings and booleans. In this one, we will conclude built-in types by discussing lists and maps. Let's get started.","tags":["dart","tutorial"],"path":"posts/dart/2018/09/dart-programming-language-tutorial-part-6-built-in-types-part-2/"},"fields":{"readingTime":{"text":"6 min read"}}},"next":{"frontmatter":{"title":"Hackerrank | Solution of Time Conversion in Golang","description":"In this one we will solve the last question from warmup section from hackerrank. Time Conversion. A quick and easy one, which only requires some formatting. Let's dive right into it.","tags":["hackerrank","coding","golang"],"path":"posts/coding/hackerrank/2018/09/hackerrank-solution-of-time-conversion-in-golang/"},"fields":{"readingTime":{"text":"5 min read"}}}}}